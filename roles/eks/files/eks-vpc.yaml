---
AWSTemplateFormatVersion: '2010-09-09'
Description: This template will create a VPC, with four subnets, two public, two private,two NAT Gateways, one Internet Gateway, One VPN Gateway
Parameters:
  CIDR:
    Description: CIDR address block for the VPC
    Type: String
    Default: 10.0.0.0/22
  PublicCidrBlock1:
    Description: The IP address range for Public Subnet 1
    Type: String
    Default: 10.0.0.0/24
  PublicSubnet1AZ:
    Description: The AZ for Public Subnet 1
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-central-1a
  PublicCidrBlock2:
    Description: The IP address range for Public Subnet 2
    Type: String
    Default: 10.0.2.0/24
  PublicSubnet2AZ:
    Description: The AZ for Public Subnet 2
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-central-1b
  PrivateCidrBlock1:
    Description: The IP address range for Private Subnet 1
    Type: String
    Default: 10.0.1.0/24
  PrivateSubnet1AZ:
    Description: The AZ for Private Subnet 1
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-central-1a
  PrivateCidrBlock2:
    Description: The IP address range for Private Subnet 2
    Type: String
    Default: 10.0.3.0/24
  PrivateSubnet2AZ:
    Description: The AZ Private Subnet 2
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-central-1b
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: CIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicCidrBlock1
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone:
        Ref: PublicSubnet1AZ
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicCidrBlock2
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone:
        Ref: PublicSubnet2AZ
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: IGW
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  NAT1:
    DependsOn: AttachGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP1
        - AllocationId
      SubnetId:
        Ref: PublicSubnet1
  NAT2:
    DependsOn: AttachGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP2
        - AllocationId
      SubnetId:
        Ref: PublicSubnet2
  EIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  EIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicRouteTable
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
  PublicSubnetNetworkAclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      NetworkAclId:
        Ref: PublicNetworkAcl
  PublicSubnetNetworkAclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      NetworkAclId:
        Ref: PublicNetworkAcl
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateCidrBlock1
      AvailabilityZone:
        Ref: PrivateSubnet1AZ
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateCidrBlock2
      AvailabilityZone:
        Ref: PrivateSubnet2AZ
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: PrivateRouteTable1
  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      RouteTableId:
        Ref: PrivateRouteTable2
  PrivateNATRouteTableAssociation1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NAT1
  PrivateNATRouteTableAssociation2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NAT2
  PrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
  PrivateSubnetNetworkAclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      NetworkAclId:
        Ref: PrivateNetworkAcl
  PrivateSubnetNetworkAclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      NetworkAclId:
        Ref: PrivateNetworkAcl
  NetworkAclEntry1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      Protocol: "-1"
      RuleAction: allow
      RuleNumber: '100'
      NetworkAclId:
        Ref: PublicNetworkAcl
  NetworkAclEntry2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: "-1"
      RuleAction: allow
      RuleNumber: '100'
      NetworkAclId:
        Ref: PublicNetworkAcl
  NetworkAclEntry3:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      Protocol: "-1"
      RuleAction: allow
      RuleNumber: '100'
      NetworkAclId:
        Ref: PrivateNetworkAcl
  NetworkAclEntry4:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: "-1"
      RuleAction: allow
      RuleNumber: '100'
      NetworkAclId:
        Ref: PrivateNetworkAcl
  MyVPNGateway: 
    Type: AWS::EC2::VPNGateway
    DependsOn: VPC
    Properties:
      Type: ipsec.1
      
  AttachVpnGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      VpnGatewayId:
        Ref: MyVPNGateway
  VPNGatewayPropagation:
    Type: AWS::EC2::VPNGatewayRoutePropagation
    DependsOn: 
    - MyVPNGateway
    - AttachVpnGateway
    Properties:
      RouteTableIds: 
        - Ref: PrivateRouteTable1
        - Ref: PrivateRouteTable2
        - Ref: PublicRouteTable
      VpnGatewayId: 
        Ref: MyVPNGateway
Outputs:
  VPCId:
    Description: VPCId of the newly created VPC
    Value:
      Ref: VPC
  PublicSubnet1Id:
    Description: SubnetId of the public subnet 1
    Value:
      Ref: PublicSubnet1
  PublicSubnet2Id:
    Description: SubnetId of the public subnet 2
    Value:
      Ref: PublicSubnet2
  PrivateSubnet1Id:
    Description: SubnetId of the private subnet 1
    Value:
      Ref: PrivateSubnet1
  PrivateSubnet2Id:
    Description: SubnetId of the private subnet 2
    Value:
      Ref: PrivateSubnet2
